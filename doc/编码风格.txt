没有一贯风格，无法编程。
没有统一风格，无法与他人进行代码交流。
以下偶尔提到的Linux风格，是编程界的模范，每个人写C的人都需要了解学习。

1.缩进，即空格(0x20)与TAB(0x09)
    POSIX/Unix/Linux 风格是使用TAB，显示成8个字符宽度。
    在应用程序编程领域，这里采用折中方案，让编辑器或IDE将TAB转换4个空格。
    
2.命名规范
    Linux 风格是用下划线连接单词，单词全小写。
    驼骆峰式命名法就是当变量名或函式名是由一个或多个单字连结在一起，而构成的唯一识别字时，第一个单词以小写字母开始；
    第二个单词的首字母大写或每一个单词的首字母都采用大写字母。
小驼峰
    变量 如 int myStudentCount;
大驼峰
    函数名/全局变量/类型名/类名（包括结构体，联合体和枚举型） 如 public class DataBaseUser;
全大写
    宏，单词用下划线隔开 如 #define HELLO_H

3.花括号
    函数体花括号另起一行。（理由是函数不能嵌套，其他使用花括号的地方能嵌套）
    if/else/while/for/switch 这些，花括号不另起一行。

4.关键字，运算符和参数列表周围空格
    参数列表func(x, y); 逗号后面一个空格，其他地方无空格
    关键字if (x)/ for (x; y; z) 这种关键字后面的空格是Linux风格，不要求
    运算符 *p/x + y 一院运算符后无空格，二元运算符前后各一个空格

5.switch/case
    Linux风格是switch行与case行，开头对其，这里不要求这样做

6.解引用运算符
    int *p; 星号紧跟变量名前
    如果有const修饰符，则星号紧跟类型名后

7.换行
    需要换行的情况下，第二行开头用两个TAB起头，如需要，可以增加第三行第四行等等，如：
static inline int MsgScan(const u8 **fld, const s8 *fldname, u32 *fldlen, const u8 *bmp, u32 bmplen, 
        int idx, const u8 **cur, u32 flen, LengthFieldFlag flag)

8.注释
    单行注释，随意写，但尽量不用//，用/**/
    多行注释这样写：
/*
 *xxxxxxx
 *xxxxxxx
 */